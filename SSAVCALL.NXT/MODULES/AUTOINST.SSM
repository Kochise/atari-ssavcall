; /// SSAV AutoInstaller v1.63 ///

	movea.l	4(SP),A6	; Adresse de la BASEPAGE
	move.l	$C(A6),D0	; Taille du SEGMENT TEXT
	add.l	$14(A6),D0	; Additionne la taille du SEGMENT DATA … D0
	add.l	$1C(A6),D0	; Additionne la taille du SEGMENT BSS … D0
	addi.l	#$100,D0	; Additionne la taille de la BASEPAGE … D0
	addi.l	#$400,D0	; Additionne la taille de la future PILE (Ici, 256 positions longues (1024 OCTETS))
	move.l	D0,D1	; Copie D0 dans D1 (Taille … r‚server)
	move.l	D0,D7
	add.l	A6,D1	; Additionne l'adresse du d‚but du programme avec D1 (La taille … r‚server)
	andi.l	#-2,D1	; Rend D1 pair (Au cas o— il ne l'‚tait pas)
	movea.l	D1,SP	; Installe l'adresse de fin du programme+place nouvelle PILE dans la PILE
	move.l	D0,-(SP)	; EmPILE la taille … reserver   \
	move.l	A6,-(SP)	; EmPILE l'adresse du programme |-> Rend le reste de la m‚moire au systŠme
	clr.w	-(SP)	; R‚serv‚                       |
	move.w	#$4A,-(SP)	; - M_SHRINK -                  |
	trap	#1	; *** GEMDOS ***                /
	lea	12(SP),SP
	
	tst	D0	; Si D0<>0, problŠme grave
	BNE	P_Term

	JSR	Init_Tabs
		
	; APPL_INIT	

	pea	AES_Params
	move.w	#10,-(SP)	; - APPL_INIT -
	move.w	#200,-(SP)	; *** AES ***
		
	JSR	Start_SSAV
	
	addq.l	#8,SP
	
	move.w	(Global),D0	; L'AES est-il install‚?
	BNE	GEM_Message	; Si OK, on est sous GEM
	
	; On lance la modification du Cookie-Jar
	
	pea	Cookie_Hacker
	move.w	#$26,-(SP)	; - SupExec -
	trap	#14	; *** XBIOS ***
	addq.l	#6,SP

	tst.w	D0
	BEQ	XBRA_Install

	cmpi.w	#-2,D0
	BEQ	AR_Install
	
	cmpi.w	#-1,D0
	BEQ	NO_Install
	
	BRA	P_Term	
	
	; On installe l'XBRA
	
XBRA_Install	pea	XBRA_Hacker
	move.w	#$26,-(SP)	; - SupExec -
	trap	#14	; *** XBIOS ***
	addq.l	#6,SP

	tst.w	D0
	BEQ	OK_Install

	cmpi.w	#-2,D0
	BEQ	AR_Install
	
	cmpi.w	#-1,D0
	BEQ	NO_Install
	
	BRA	P_Term	

P_TermRes	clr.w	-(SP)
	move.l	D7,-(SP)
	move.w	#$31,-(SP)		; - P_TermRes -
	trap	#1		; *** GEMDOS ***
	addq.l	#8,SP
	
P_Term	move.w	D0,-(SP)
	move.w	#$4C,-(SP)		; - P_Term -
	trap	#1		; *** GEMDOS ***
	

; *** L'installeur du Cookie "SSAV" ***

Cookie_Hacker	move.l	$5A0.w,D0	; L'adresse de la Cookie-Jar
	BEQ	KO_Install
	
	movea.l	D0,A0
	move.l	D0,D1

	cmpi.l	#"NULL",(A0)	; Y'a p'tet queq'chose
	BEQ	Go_For_SSAV
	
Look_For_Null	move.l	(A0,D3*8),D0
	BEQ	Next_Null
	
	addq.l	#1,D3	; Le compteur de Cookies
	BRA	Look_For_Null
	
Next_Null	move.l	(4,A0,D3*8),D2	; Le nombre de Cookies
	
	move.l	D3,D5	; On modifie le nombre de Cookies
	addq.l	#2,D5
		
	cmp.l	D2,D5
	BGE	KO_Install
	
	clr.l	(8,A0,D3*8)
	move.l	D2,(12,A0,D3*8)

Move_Cookies	move.l	(-8,A0,D3*8),(A0,D3*8)
	move.l	(-4,A0,D3*8),(4,A0,D3*8)
	subq.l	#1,D3
	BNE	Move_Cookies
	
	move.l	#"NULL",(A0)
	move.l	D2,(4,A0)
	
Go_For_SSAV	move.l	(4,A0),D3

	move.l	Cookie_Name,D1
		
Look_For_SSAV	cmp.l	D3,D4
	BGE	KO_Install
	move.l	(A0,D4*8),D0
	BEQ	Install_Rout
	cmp.l	D0,D1
	BEQ	AlReady_SSAV

	addq.l	#1,D4

	BRA	Look_For_SSAV

AlReady_SSAV	move.l	#-2,D0	; D‚j… install‚
	
	RTS		; On sort de l'installation

Install_Rout	move.l	D1,(A0,D4*8)
	move.l	#Start_SSAV,(4,A0,D4*8)
	clr.l	(8,A0,D4*8)
	move.l	D2,(12,A0,D4*8)
	
	clr.l	D0	; Well Done...
	
	RTS

KO_Install	move.l	#-1,D0	; Y'a eu un n'os
	
	RTS

XBRA_Hacker	movea.l	$88.w,A0	; TRAP #2

Verify_XBRA	; On regarde si en -12 y'a XBRA
	; Sinon on installe

	cmpi.l	#"XBRA",(-12,A0)
	
	BNE	Install_XBRA

	; On regarde si SSAVCALL est d‚j… install‚

	cmpi.l	#"SSAV",(-8,A0)
	
	; On prend le XBRA suivant, et on recommence
	; tant que l'on a pas trouv‚ "SSAV"
	
	movea.l	(-4,A0),A0	; N'affecte pas les indicateurs! Malin...
	
	BNE	Verify_XBRA

	move.w	#-2,D0

	RTS
	
Install_XBRA	move.l	$88.l,Old_TRAP2
	move.l	#New_TRAP2,$88.l

	clr.w	D0

	RTS

	dc.b	"XBRA"
	dc.b	"SSAV"
Old_TRAP2	ds.l	1

New_TRAP2	cmpi.l	#"SSAV",D0
	
	BNE	Bad_TRAP2

	move.l	#Start_SSAV,D0
	
	RTE

Bad_TRAP2	JMP	([Old_TRAP2])

; *** Les routines graphiques ***
			
OK_Install	BSR	TITLE_Print

	move.l	#OK_Text,D0
	
	BSR	Print
	
	BSR	KEEP_Print

	BRA	P_TermRes

NO_Install	BSR	TITLE_Print

	move.l	#NO_Text,D0

	BSR	Print

	clr.l	D7

	BSR	KEEP_Print

	BRA	P_Term
	
AR_Install	BSR	TITLE_Print

	move.l	#AR_Text,D0

	BSR	Print

	clr.l	D7
	
	BSR	KEEP_Print

	BRA	P_Term

TITLE_Print	lea	Start_SSAV,A1
	move.w	(-6,A1),D0
	
	unpk	D0,D1,#$3030
	ror.w	#8,D0
	unpk	D0,D2,#$3030
	
	cmpi.w	#$3039,D2
	BGT	Correct_Version
	
	andi.w	#255,D2
	ori.w	#$2000,D2
	
Correct_Version	lea	TITLE_Text,A0
	
	move.w	D2,(14,A0)
	move.w	D1,(17,A0)
	
	
	move.w	(-4,A1),D0
	
	move.w	D0,D1	; Correct_Day
	andi.w	#%11111,D1
	
	BSR	Correct_ASCII

	move.w	D2,(41,A0)
	
	move.w	D0,D1	; Correct_Month
	andi.w	#%111100000,D1
	lsr.w	#5,D1
	
	BSR	Correct_ASCII
	
	move.w	D2,(44,A0)
	
	move.w	D0,D1	; Correct_Year
	andi.w	#%1111111000000000,D1
	rol.w	#7,D1
	addi.w	#80,D1
	
	BSR	Correct_ASCII
	
	move.w	D2,(47,A0)
	
	move.l	#TITLE_Text,D0

	BSR	Print

	RTS

Correct_ASCII	move.w	D1,D3
	divu.w	#10,D3	; Dizaine
	move.w	D3,D2
	
Test_Dizaine	cmpi.w	#10,D2
	BLT	Dizaine_OK
	
	subi.w	#10,D2
	
	BRA	Test_Dizaine
	
Dizaine_OK	lsl.w	#8,D2	; On place
	mulu.w	#10,D3
	sub.w	D3,D1	; Unit‚
	or.w	D1,D2
	add.w	#$3030,D2
	
	RTS

Print	move.l	D0,-(SP)
	move.w	#9,-(SP)	; - C_CONWS -
	trap	#1	; *** GEMDOS ***
	addq.l	#6,SP
	
	RTS

KEEP_Print	BSR	Sizing

	move.l	#TKR_Buffer,D0

	BSR	Print

	RTS

Sizing	lea	TKR_Keep,A0
	lea	TKR_Buffer,A1
	
	BSR	TKR_Copy

	tst.l	D7
	BNE	Sized
	
	move.b	#"0",(A1)+
	
	lea	TKR_Byte,A0
	
	BSR	TKR_Copy
	
	lea	TKR_Memory,A0
	
	BSR	TKR_Copy
	
	RTS
	
Sized	move.l	D7,D1
	lea	TKR_Buffer,A0
	
Dizaine	divu.l	#10,D0:D1
	
	cmpi.l	#10,D1
	BLT	End_Count
	move.b	D0,-(A0)
	clr.l	D0
	
	BRA	Dizaine
	
End_Count	move.b	D0,-(A0)
	move.b	D1,-(A0)

	move.w	#9,D0
	lea	TKR_NumBuffer,A0
	
Correct	add.b	#$30,(A0)+
	DBF	D0,Correct
	
	lea	TKR_NumBuffer,A0
	move.w	#9,D1
	
Start_Num	move.b	(A0)+,D0
	cmpi.b	#"0",D0
	BNE	End_Num
	
	DBF	D1,Start_Num
	
End_Num	subq.l	#1,A0

Copy_Num	move.b	(A0)+,(A1)+
	DBF	D1,Copy_Num
	
	lea	TKR_Byte,A0
	
	BSR	TKR_Copy
	
	move.b	#"s",(A1)+
	
	lea	TKR_Memory,A0
	
	BSR	TKR_Copy

	RTS
	
TKR_Copy	move.b	(A0)+,(A1)+
	BNE	TKR_Copy
	
	subq.l	#1,A1
	
	RTS

TITLE_Text	dc.b	13,10,27,"p"," SSAVCALL $$.$$ - A KOSS Production (**/**/**) ",27,"q",13,10,0
OK_Text	dc.b	"   Installation correcte...                8-)",13,10,0
NO_Text	dc.b	"   Installation d‚fectueuse...             8-(",13,10,0
AR_Text	dc.b	"   D‚j… install‚...                        8-|",13,10,0
TKR_Keep	dc.b	"TKR: Keep ",0
TKR_Byte	dc.b	" byte",0
TKR_Memory	dc.b	" in memory.",13,10,0
TKR_NumBuffer	ds.b	10
TKR_Buffer	ds.b	40

	EVEN
	
GEM_Message	move.w	D0,AES_Handle	; L'AP_ID

	; GRAF_MOUSE, pour rendre l'aspect normal … la souris
	
	clr.w	-(SP)
	clr.l	-(SP)
	pea	AES_Params
	move.w	#78,-(SP)	; - GRAF_MOUSE -
	move.w	#200,-(SP)	; *** AES ***
	
	JSR	Start_SSAV
	
	lea	(14,SP),SP

	; RSRC_OBFIX, on reloge la ressource,
	; et on corrige les infos
	
	move.w	#13,D7
	clr.w	D6
	
Reloc_RSC	move.l	Rs_trindex,-(SP)
	move.w	D6,-(SP)
	pea	AES_Params
	move.w	#114,-(SP)	; - RSRC_OBFIX -
	move.w	#200,-(SP)	; *** AES ***
	
	JSR	Start_SSAV

	lea	(14,SP),SP
	
	addq.w	#1,D6
	
	DBF	D7,Reloc_RSC

	; FORM_CENTER, pour centrer
	
	move.l	Rs_trindex,-(SP)	; L'adresse de l'arbre
	pea	AES_Params
	move.w	#54,-(SP)	; - FORM_CENTER -
	move.w	#200,-(SP)	; *** AES ***
	
	JSR	Start_SSAV
	
	lea	(12,SP),SP
	
	movea.l	D0,A0
	move.w	(A0),-(SP)
	move.w	(2,A0),-(SP)
	move.w	(4,A0),-(SP)
	move.w	(6,A0),-(SP)
	
	; FORM_DIAL, pour r‚server
	; On touche pas aux valeurs renvoy‚es par FORM_CENTER
	
	clr.w	-(SP)
	move.l	(6,SP),-(SP)
	move.l	(6,SP),-(SP)
	move.l	(4,SP),-(SP)
	move.l	(4,SP),-(SP)
	pea	AES_Params
	move.w	#51,-(SP)	; - FORM_DIAL -
	move.w	#200,-(SP)	; *** AES ***
	
	JSR	Start_SSAV	

	lea	(26,SP),SP

	; OBJC_DRAW, pour tracer
	
	move.l	Rs_trindex,-(SP)	; L'adresse de l'arbre
	clr.w	-(SP)
	move.w	#4,-(SP)
	move.l	(12,SP),-(SP)	; Les coordonn‚es de FORM_CENTER
	move.l	(12,SP),-(SP)	; Les dimensions de FORM_CENTER
	pea	AES_Params
	move.w	#42,-(SP)	; - OBJC_DRAW -
	move.w	#200,-(SP)	; *** AES ***	

	JSR	Start_SSAV
	
	lea	(24,SP),SP
	
	; FORM_DO, pour gerer
	
	move.l	Rs_trindex,-(SP)	; L'adresse de l'arbre
	move.w	#-1,-(SP)	; Pas de champs ‚ditables
	pea	AES_Params
	move.w	#50,-(SP)	; - FORM_DO -
	move.w	#200,-(SP)	; *** AES ***
	
	JSR	Start_SSAV

	lea	(14,SP),SP
	
	; FORM_DIAL, pour effacer
	
	move.w	#3,-(SP)
	move.l	(6,SP),-(SP)	; Les coordonn‚es de FORM_CENTER
	move.l	(6,SP),-(SP)	; Les dimensions de FORM_CENTER
	move.l	(4,SP),-(SP)	; Les coordonn‚es de FORM_CENTER
	move.l	(4,SP),-(SP)	; Les dimensions de FORM_CENTER
	pea	AES_Params
	move.w	#51,-(SP)	; - FORM_DIAL -
	move.w	#200,-(SP)	; *** AES ***

	JSR	Start_SSAV
	
	lea	(26,SP),SP

	addq.l	#8,SP	; On restaure vu que l'on … plus besoin des valeurs

	; APPL_EXIT

	pea	AES_Params
	move.w	#19,-(SP)	; - APPL_EXIT -
	move.w	#200,-(SP)	; *** AES ***
	
	JSR	Start_SSAV

	addq.l	#8,SP

	; P_TERM0

P_Term0	clr.w	-(SP)
	trap	#1
	
Init_Tabs	lea	AES_Params,A0	; On pr‚pare … la main les tableaux du GEM
	move.l	#Control,(A0)+
	move.l	#Global,(A0)+
	move.l	#Int_In,(A0)+
	move.l	#Int_Out,(A0)+
	move.l	#Addr_In,(A0)+
	move.l	#Addr_Out,(A0)+

	RTS
